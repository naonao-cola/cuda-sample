<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="998.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="981" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="981" > </text>
<g id="frames">
<g >
<title>__handle_mm_fault (42,526,418 samples, 23.07%)</title><rect x="471.8" y="837" width="272.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="474.79" y="847.5" >__handle_mm_fault</text>
</g>
<g >
<title>node::StreamBase::CallJSOnreadMethod (28,107,487 samples, 15.25%)</title><rect x="10.0" y="725" width="179.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >node::StreamBase::CallJ..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (7,516,881 samples, 4.08%)</title><rect x="1141.9" y="917" width="48.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1144.88" y="927.5" >seco..</text>
</g>
<g >
<title>update_blocked_averages (62,149 samples, 0.03%)</title><rect x="1145.5" y="757" width="0.4" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1148.52" y="767.5" ></text>
</g>
<g >
<title>default_idle (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="837" width="22.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1170.85" y="847.5" >d..</text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="565" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >[perf-25543.map]</text>
</g>
<g >
<title>load_balance (99,079 samples, 0.05%)</title><rect x="1145.9" y="757" width="0.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1148.92" y="767.5" ></text>
</g>
<g >
<title>perf_001 (143,999,926 samples, 78.12%)</title><rect x="212.9" y="933" width="921.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="215.87" y="943.5" >perf_001</text>
</g>
<g >
<title>try_to_wake_up (56,058 samples, 0.03%)</title><rect x="1189.3" y="597" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1192.27" y="607.5" ></text>
</g>
<g >
<title>new_sync_write (24,524,553 samples, 13.31%)</title><rect x="10.0" y="181" width="157.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >new_sync_write</text>
</g>
<g >
<title>pick_next_entity (86,921 samples, 0.05%)</title><rect x="1167.3" y="821" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1170.29" y="831.5" ></text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="437" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >[perf-25543.map]</text>
</g>
<g >
<title>swapper (8,634,690 samples, 4.68%)</title><rect x="1134.7" y="933" width="55.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1137.72" y="943.5" >swapper</text>
</g>
<g >
<title>[perf-421.map] (3,582,709 samples, 1.94%)</title><rect x="189.9" y="661" width="23.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="192.94" y="671.5" >[..</text>
</g>
<g >
<title>[perf-421.map] (3,582,709 samples, 1.94%)</title><rect x="189.9" y="693" width="23.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="192.94" y="703.5" >[..</text>
</g>
<g >
<title>node::SpinEventLoopInternal (31,690,196 samples, 17.19%)</title><rect x="10.0" y="853" width="202.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >node::SpinEventLoopInternal</text>
</g>
<g >
<title>finish_task_switch.isra.0 (232,803 samples, 0.13%)</title><rect x="1165.8" y="837" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.80" y="847.5" ></text>
</g>
<g >
<title>[perf-421.map] (3,582,934 samples, 1.94%)</title><rect x="167.0" y="453" width="22.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.00" y="463.5" >[..</text>
</g>
<g >
<title>sysvec_irq_work (114,403 samples, 0.06%)</title><rect x="1189.3" y="693" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1192.27" y="703.5" ></text>
</g>
<g >
<title>node::StreamBase::Write (24,524,553 samples, 13.31%)</title><rect x="10.0" y="293" width="157.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >node::StreamBase::Wr..</text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (28,107,487 samples, 15.25%)</title><rect x="10.0" y="757" width="179.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >node::LibuvStreamWrap::..</text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="501" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[perf-25543.map]</text>
</g>
<g >
<title>asm_sysvec_hyperv_stimer0 (232,803 samples, 0.13%)</title><rect x="1165.8" y="821" width="1.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1168.80" y="831.5" ></text>
</g>
<g >
<title>[perf-421.map] (3,582,934 samples, 1.94%)</title><rect x="167.0" y="469" width="22.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.00" y="479.5" >[..</text>
</g>
<g >
<title>find_busiest_group (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="725" width="22.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1170.85" y="735.5" >f..</text>
</g>
<g >
<title>__switch_to_asm (141,478 samples, 0.08%)</title><rect x="1141.0" y="917" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1143.97" y="927.5" ></text>
</g>
<g >
<title>[perf-421.map] (3,582,934 samples, 1.94%)</title><rect x="167.0" y="501" width="22.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.00" y="511.5" >[..</text>
</g>
<g >
<title>rebalance_domains (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="757" width="22.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1170.85" y="767.5" >r..</text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (28,107,487 samples, 15.25%)</title><rect x="10.0" y="645" width="179.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >v8::internal::(anonymou..</text>
</g>
<g >
<title>ksys_write (24,524,553 samples, 13.31%)</title><rect x="10.0" y="213" width="157.0" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >ksys_write</text>
</g>
<g >
<title>irq_work_run_list (56,058 samples, 0.03%)</title><rect x="1189.3" y="661" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.27" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24,524,553 samples, 13.31%)</title><rect x="10.0" y="245" width="157.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >entry_SYSCALL_64_aft..</text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (3,582,709 samples, 1.94%)</title><rect x="189.9" y="757" width="23.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="192.94" y="767.5" >v..</text>
</g>
<g >
<title>uv__io_poll (28,107,487 samples, 15.25%)</title><rect x="10.0" y="821" width="179.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >uv__io_poll</text>
</g>
<g >
<title>node::Environment::RunTimers (3,582,709 samples, 1.94%)</title><rect x="189.9" y="805" width="23.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="192.94" y="815.5" >n..</text>
</g>
<g >
<title>vfs_write (24,524,553 samples, 13.31%)</title><rect x="10.0" y="197" width="157.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >vfs_write</text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="517" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >[perf-25543.map]</text>
</g>
<g >
<title>autoremove_wake_function (56,058 samples, 0.03%)</title><rect x="1189.3" y="613" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1192.27" y="623.5" ></text>
</g>
<g >
<title>pipe_write (24,524,553 samples, 13.31%)</title><rect x="10.0" y="165" width="157.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >pipe_write</text>
</g>
<g >
<title>irq_enter_rcu (58,345 samples, 0.03%)</title><rect x="1189.6" y="677" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1192.63" y="687.5" ></text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="581" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >[perf-25543.map]</text>
</g>
<g >
<title>clear_huge_page (42,526,418 samples, 23.07%)</title><rect x="471.8" y="805" width="272.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="474.79" y="815.5" >clear_huge_page</text>
</g>
<g >
<title>all (184,324,824 samples, 100%)</title><rect x="10.0" y="949" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="421" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >[perf-25543.map]</text>
</g>
<g >
<title>ep_autoremove_wake_function (24,524,553 samples, 13.31%)</title><rect x="10.0" y="69" width="157.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >ep_autoremove_wake_f..</text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (28,107,487 samples, 15.25%)</title><rect x="10.0" y="613" width="179.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >Builtins_JSEntryTrampol..</text>
</g>
<g >
<title>[unknown] (61,028,241 samples, 33.11%)</title><rect x="744.0" y="885" width="390.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="747.04" y="895.5" >[unknown]</text>
</g>
<g >
<title>asm_sysvec_hyperv_stimer0 (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="821" width="22.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1170.85" y="831.5" >a..</text>
</g>
<g >
<title>node::StreamBase::WriteBuffer (24,524,553 samples, 13.31%)</title><rect x="10.0" y="309" width="157.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >node::StreamBase::Wr..</text>
</g>
<g >
<title>find_busiest_group (99,079 samples, 0.05%)</title><rect x="1145.9" y="741" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1148.92" y="751.5" ></text>
</g>
<g >
<title>[perf-421.map] (3,582,934 samples, 1.94%)</title><rect x="167.0" y="549" width="22.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.00" y="559.5" >[..</text>
</g>
<g >
<title>node::Start (31,690,196 samples, 17.19%)</title><rect x="10.0" y="901" width="202.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >node::Start</text>
</g>
<g >
<title>__schedule (3,326,946 samples, 1.80%)</title><rect x="1146.6" y="853" width="21.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1149.55" y="863.5" >_..</text>
</g>
<g >
<title>Builtins_JSEntry (28,107,487 samples, 15.25%)</title><rect x="10.0" y="629" width="179.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >Builtins_JSEntry</text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="533" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >[perf-25543.map]</text>
</g>
<g >
<title>clear_page_erms (42,526,418 samples, 23.07%)</title><rect x="471.8" y="773" width="272.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="474.79" y="783.5" >clear_page_erms</text>
</g>
<g >
<title>do_syscall_64 (24,524,553 samples, 13.31%)</title><rect x="10.0" y="229" width="157.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >do_syscall_64</text>
</g>
<g >
<title>void node::StreamBase::JSMethod&lt;&amp;node::StreamBase::WriteBuffer&gt; (24,524,553 samples, 13.31%)</title><rect x="10.0" y="325" width="157.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >void node::StreamBas..</text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (28,107,487 samples, 15.25%)</title><rect x="10.0" y="741" width="179.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >node::EmitToJSStreamLis..</text>
</g>
<g >
<title>[perf-421.map] (3,582,709 samples, 1.94%)</title><rect x="189.9" y="709" width="23.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="192.94" y="719.5" >[..</text>
</g>
<g >
<title>find_busiest_group (61,518 samples, 0.03%)</title><rect x="1145.1" y="725" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1148.12" y="735.5" ></text>
</g>
<g >
<title>exc_page_fault (42,526,418 samples, 23.07%)</title><rect x="471.8" y="885" width="272.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="474.79" y="895.5" >exc_page_fault</text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (42,526,418 samples, 23.07%)</title><rect x="471.8" y="821" width="272.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="474.79" y="831.5" >do_huge_pmd_anonymous_page</text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="453" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >[perf-25543.map]</text>
</g>
<g >
<title>__wake_up_common (56,058 samples, 0.03%)</title><rect x="1189.3" y="629" width="0.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1192.27" y="639.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (28,107,487 samples, 15.25%)</title><rect x="10.0" y="693" width="179.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >node::InternalMakeCallb..</text>
</g>
<g >
<title>node::NodeMainInstance::Run (31,690,196 samples, 17.19%)</title><rect x="10.0" y="869" width="202.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >node::NodeMainInstance::Run</text>
</g>
<g >
<title>start_kernel (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="901" width="22.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1170.85" y="911.5" >s..</text>
</g>
<g >
<title>try_to_wake_up (24,524,553 samples, 13.31%)</title><rect x="10.0" y="53" width="157.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >try_to_wake_up</text>
</g>
<g >
<title>default_idle (729,714 samples, 0.40%)</title><rect x="1141.9" y="853" width="4.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1144.88" y="863.5" ></text>
</g>
<g >
<title>rebalance_domains (61,518 samples, 0.03%)</title><rect x="1145.1" y="757" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1148.12" y="767.5" ></text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="405" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >[perf-25543.map]</text>
</g>
<g >
<title>sysvec_hyperv_stimer0 (232,803 samples, 0.13%)</title><rect x="1165.8" y="805" width="1.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1168.80" y="815.5" ></text>
</g>
<g >
<title>__sysvec_hyperv_stimer0 (232,803 samples, 0.13%)</title><rect x="1165.8" y="789" width="1.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1168.80" y="799.5" ></text>
</g>
<g >
<title>node (31,690,196 samples, 17.19%)</title><rect x="10.0" y="933" width="202.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >node</text>
</g>
<g >
<title>uv_run (31,690,196 samples, 17.19%)</title><rect x="10.0" y="837" width="202.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >uv_run</text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (28,107,487 samples, 15.25%)</title><rect x="10.0" y="773" width="179.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >node::LibuvStreamWrap::..</text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="597" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >[perf-25543.map]</text>
</g>
<g >
<title>[perf-421.map] (3,582,934 samples, 1.94%)</title><rect x="167.0" y="565" width="22.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.00" y="575.5" >[..</text>
</g>
<g >
<title>[libc.so.6] (31,690,196 samples, 17.19%)</title><rect x="10.0" y="917" width="202.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >[libc.so.6]</text>
</g>
<g >
<title>non-virtual thunk to node::LibuvStreamWrap::DoTryWrite (24,524,553 samples, 13.31%)</title><rect x="10.0" y="277" width="157.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >non-virtual thunk to..</text>
</g>
<g >
<title>[perf-421.map] (3,582,934 samples, 1.94%)</title><rect x="167.0" y="485" width="22.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.00" y="495.5" >[..</text>
</g>
<g >
<title>__sysvec_hyperv_stimer0 (142,091 samples, 0.08%)</title><rect x="1144.2" y="805" width="0.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1147.21" y="815.5" ></text>
</g>
<g >
<title>[perf-421.map] (3,582,709 samples, 1.94%)</title><rect x="189.9" y="677" width="23.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="192.94" y="687.5" >[..</text>
</g>
<g >
<title>asm_sysvec_hyperv_stimer0 (451,758 samples, 0.25%)</title><rect x="1143.7" y="837" width="2.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1146.66" y="847.5" ></text>
</g>
<g >
<title>pick_next_task_fair (86,921 samples, 0.05%)</title><rect x="1167.3" y="837" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1170.29" y="847.5" ></text>
</g>
<g >
<title>uv__run_timers (3,582,709 samples, 1.94%)</title><rect x="189.9" y="821" width="23.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="192.94" y="831.5" >u..</text>
</g>
<g >
<title>handle_mm_fault (42,526,418 samples, 23.07%)</title><rect x="471.8" y="853" width="272.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="474.79" y="863.5" >handle_mm_fault</text>
</g>
<g >
<title>enqueue_task_fair (56,058 samples, 0.03%)</title><rect x="1189.3" y="565" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1192.27" y="575.5" ></text>
</g>
<g >
<title>cpu_startup_entry (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="885" width="22.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1170.85" y="895.5" >c..</text>
</g>
<g >
<title>uv__stream_io (28,107,487 samples, 15.25%)</title><rect x="10.0" y="805" width="179.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >uv__stream_io</text>
</g>
<g >
<title>tick_irq_enter (277,956 samples, 0.15%)</title><rect x="1141.9" y="789" width="1.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1144.88" y="799.5" ></text>
</g>
<g >
<title>[unknown] (61,028,241 samples, 33.11%)</title><rect x="744.0" y="917" width="390.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="747.04" y="927.5" >[unknown]</text>
</g>
<g >
<title>handle_softirqs (222,746 samples, 0.12%)</title><rect x="1145.1" y="789" width="1.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1148.12" y="799.5" ></text>
</g>
<g >
<title>[perf-421.map] (3,582,934 samples, 1.94%)</title><rect x="167.0" y="533" width="22.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.00" y="543.5" >[..</text>
</g>
<g >
<title>[perf-421.map] (3,582,934 samples, 1.94%)</title><rect x="167.0" y="597" width="22.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.00" y="607.5" >[..</text>
</g>
<g >
<title>do_idle (4,056,660 samples, 2.20%)</title><rect x="1141.9" y="885" width="25.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1144.88" y="895.5" >d..</text>
</g>
<g >
<title>[perf-421.map] (3,582,934 samples, 1.94%)</title><rect x="167.0" y="517" width="22.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.00" y="527.5" >[..</text>
</g>
<g >
<title>enqueue_entity (56,058 samples, 0.03%)</title><rect x="1189.3" y="549" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1192.27" y="559.5" ></text>
</g>
<g >
<title>sysvec_hyperv_stimer0 (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="805" width="22.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1170.85" y="815.5" >s..</text>
</g>
<g >
<title>ep_poll_callback (24,524,553 samples, 13.31%)</title><rect x="10.0" y="117" width="157.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >ep_poll_callback</text>
</g>
<g >
<title>v8::Function::Call (28,107,487 samples, 15.25%)</title><rect x="10.0" y="677" width="179.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >v8::Function::Call</text>
</g>
<g >
<title>Builtins_JSEntry (3,582,709 samples, 1.94%)</title><rect x="189.9" y="741" width="23.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="192.94" y="751.5" >B..</text>
</g>
<g >
<title>__wake_up_common (24,524,553 samples, 13.31%)</title><rect x="10.0" y="133" width="157.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >__wake_up_common</text>
</g>
<g >
<title>load_balance (61,518 samples, 0.03%)</title><rect x="1145.1" y="741" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1148.12" y="751.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (142,091 samples, 0.08%)</title><rect x="1144.2" y="789" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1147.21" y="799.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (3,582,709 samples, 1.94%)</title><rect x="189.9" y="725" width="23.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="192.94" y="735.5" >B..</text>
</g>
<g >
<title>node::NodeMainInstance::Run (31,690,196 samples, 17.19%)</title><rect x="10.0" y="885" width="202.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >node::NodeMainInstance::Run</text>
</g>
<g >
<title>__wake_up_common_lock (56,058 samples, 0.03%)</title><rect x="1189.3" y="645" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.27" y="655.5" ></text>
</g>
<g >
<title>v8::Function::Call (3,582,709 samples, 1.94%)</title><rect x="189.9" y="789" width="23.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="192.94" y="799.5" >v..</text>
</g>
<g >
<title>[perf_001] (82,971,685 samples, 45.01%)</title><rect x="212.9" y="917" width="531.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="215.87" y="927.5" >[perf_001]</text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="549" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >[perf-25543.map]</text>
</g>
<g >
<title>clear_subpage (42,526,418 samples, 23.07%)</title><rect x="471.8" y="789" width="272.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="474.79" y="799.5" >clear_subpage</text>
</g>
<g >
<title>asm_sysvec_irq_work (114,403 samples, 0.06%)</title><rect x="1189.3" y="709" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.27" y="719.5" ></text>
</g>
<g >
<title>read_tsc (277,956 samples, 0.15%)</title><rect x="1141.9" y="757" width="1.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1144.88" y="767.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="789" width="22.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1170.85" y="799.5" >i..</text>
</g>
<g >
<title>Builtins_CEntry_Return1_ArgvOnStack_BuiltinExit (24,524,553 samples, 13.31%)</title><rect x="10.0" y="389" width="157.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >Builtins_CEntry_Retu..</text>
</g>
<g >
<title>v8::internal::FunctionCallbackArguments::Call (24,524,553 samples, 13.31%)</title><rect x="10.0" y="341" width="157.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >v8::internal::Functi..</text>
</g>
<g >
<title>uv__read (28,107,487 samples, 15.25%)</title><rect x="10.0" y="789" width="179.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >uv__read</text>
</g>
<g >
<title>asm_sysvec_call_function_single (277,956 samples, 0.15%)</title><rect x="1141.9" y="837" width="1.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1144.88" y="847.5" ></text>
</g>
<g >
<title>default_idle_call (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="853" width="22.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1170.85" y="863.5" >d..</text>
</g>
<g >
<title>asm_exc_page_fault (46,949,352 samples, 25.47%)</title><rect x="443.5" y="901" width="300.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="446.48" y="911.5" >asm_exc_page_fault</text>
</g>
<g >
<title>__hrtimer_next_event_base (142,091 samples, 0.08%)</title><rect x="1144.2" y="757" width="0.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1147.21" y="767.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (24,524,553 samples, 13.31%)</title><rect x="10.0" y="373" width="157.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >v8::internal::Builti..</text>
</g>
<g >
<title>sysvec_call_function_single (277,956 samples, 0.15%)</title><rect x="1141.9" y="821" width="1.8" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1144.88" y="831.5" ></text>
</g>
<g >
<title>default_idle_call (729,714 samples, 0.40%)</title><rect x="1141.9" y="869" width="4.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.88" y="879.5" ></text>
</g>
<g >
<title>schedule_idle (3,326,946 samples, 1.80%)</title><rect x="1146.6" y="869" width="21.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1149.55" y="879.5" >s..</text>
</g>
<g >
<title>Napi::details::CallbackData&lt;Napi::Value  (3,582,709 samples, 1.94%)</title><rect x="189.9" y="645" width="23.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="192.94" y="655.5" >N..</text>
</g>
<g >
<title>load_balance (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="741" width="22.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1170.85" y="751.5" >l..</text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="485" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >[perf-25543.map]</text>
</g>
<g >
<title>[perf_001] (61,028,241 samples, 33.11%)</title><rect x="744.0" y="869" width="390.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="747.04" y="879.5" >[perf_001]</text>
</g>
<g >
<title>ttwu_queue_wakelist (24,524,553 samples, 13.31%)</title><rect x="10.0" y="37" width="157.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.00" y="47.5" >ttwu_queue_wakelist</text>
</g>
<g >
<title>__wake_up_common (24,524,553 samples, 13.31%)</title><rect x="10.0" y="85" width="157.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >__wake_up_common</text>
</g>
<g >
<title>sysvec_hyperv_stimer0 (364,837 samples, 0.20%)</title><rect x="1144.2" y="821" width="2.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1147.21" y="831.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (3,582,709 samples, 1.94%)</title><rect x="189.9" y="773" width="23.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="192.94" y="783.5" >v..</text>
</g>
<g >
<title>[perf-25543.map] (24,524,553 samples, 13.31%)</title><rect x="10.0" y="469" width="157.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >[perf-25543.map]</text>
</g>
<g >
<title>write (24,524,553 samples, 13.31%)</title><rect x="10.0" y="261" width="157.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >write</text>
</g>
<g >
<title>__wake_up_common_lock (24,524,553 samples, 13.31%)</title><rect x="10.0" y="149" width="157.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >__wake_up_common_lock</text>
</g>
<g >
<title>add_interrupt_randomness (222,957 samples, 0.12%)</title><rect x="1165.8" y="773" width="1.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1168.80" y="783.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ostream (61,028,241 samples, 33.11%)</title><rect x="744.0" y="901" width="390.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="747.04" y="911.5" >std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::~b..</text>
</g>
<g >
<title>ktime_get (277,956 samples, 0.15%)</title><rect x="1141.9" y="773" width="1.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1144.88" y="783.5" ></text>
</g>
<g >
<title>[perf-421.map] (3,582,934 samples, 1.94%)</title><rect x="167.0" y="581" width="22.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="170.00" y="591.5" >[..</text>
</g>
<g >
<title>rebalance_domains (99,079 samples, 0.05%)</title><rect x="1145.9" y="773" width="0.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1148.92" y="783.5" ></text>
</g>
<g >
<title>ttwu_do_activate (56,058 samples, 0.03%)</title><rect x="1189.3" y="581" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1192.27" y="591.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (28,107,487 samples, 15.25%)</title><rect x="10.0" y="661" width="179.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >v8::internal::Execution..</text>
</g>
<g >
<title>handle_softirqs (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="773" width="22.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1170.85" y="783.5" >h..</text>
</g>
<g >
<title>do_user_addr_fault (42,526,418 samples, 23.07%)</title><rect x="471.8" y="869" width="272.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="474.79" y="879.5" >do_user_addr_fault</text>
</g>
<g >
<title>v8::internal::MaybeHandle&lt;v8::internal::Object&gt; v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (24,524,553 samples, 13.31%)</title><rect x="10.0" y="357" width="157.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >v8::internal::MaybeH..</text>
</g>
<g >
<title>do_idle (3,460,221 samples, 1.88%)</title><rect x="1167.8" y="869" width="22.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1170.85" y="879.5" >d..</text>
</g>
<g >
<title>__wake_up_common_lock (24,524,553 samples, 13.31%)</title><rect x="10.0" y="101" width="157.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >__wake_up_common_lock</text>
</g>
<g >
<title>update_load_avg (62,149 samples, 0.03%)</title><rect x="1145.5" y="741" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1148.52" y="751.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4,056,660 samples, 2.20%)</title><rect x="1141.9" y="901" width="25.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1144.88" y="911.5" >c..</text>
</g>
<g >
<title>hrtimer_update_next_event (142,091 samples, 0.08%)</title><rect x="1144.2" y="773" width="0.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1147.21" y="783.5" ></text>
</g>
<g >
<title>irq_enter_rcu (277,956 samples, 0.15%)</title><rect x="1141.9" y="805" width="1.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1144.88" y="815.5" ></text>
</g>
<g >
<title>asm_sysvec_hyperv_stimer0 (3,325,917 samples, 1.80%)</title><rect x="1168.0" y="709" width="21.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1170.98" y="719.5" >a..</text>
</g>
<g >
<title>_nohz_idle_balance.constprop.0.isra.0 (123,667 samples, 0.07%)</title><rect x="1145.1" y="773" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1148.12" y="783.5" ></text>
</g>
<g >
<title>[unknown] (976,331 samples, 0.53%)</title><rect x="1134.7" y="917" width="6.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1137.72" y="927.5" ></text>
</g>
<g >
<title>irq_exit_rcu (222,746 samples, 0.12%)</title><rect x="1145.1" y="805" width="1.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1148.12" y="815.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (56,058 samples, 0.03%)</title><rect x="1189.3" y="677" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1192.27" y="687.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (28,107,487 samples, 15.25%)</title><rect x="10.0" y="709" width="179.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >node::AsyncWrap::MakeCa..</text>
</g>
</g>
</svg>
