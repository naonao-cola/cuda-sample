//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-34097967
// Cuda compilation tools, release 12.4, V12.4.131
// Based on NVVM 7.0.1
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	_Z12vecAddKernelPfS_S_i


//vector_addition.cu:6 __global__ void vecAddKernel(float *A, float *B, float *C, int n) {
.visible .entry _Z12vecAddKernelPfS_S_i(
	.param .u64 _Z12vecAddKernelPfS_S_i_param_0,
	.param .u64 _Z12vecAddKernelPfS_S_i_param_1,
	.param .u64 _Z12vecAddKernelPfS_S_i_param_2,
	.param .u32 _Z12vecAddKernelPfS_S_i_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;

//vector_addition.cu:4 // compute vector sum C = A + B
//vector_addition.cu:5 // each thread peforms one pair-wise addition
//vector_addition.cu:6 __global__ void vecAddKernel(float *A, float *B, float *C, int n) {
	.loc	1 6 0


	ld.param.u64 	%rd1, [_Z12vecAddKernelPfS_S_i_param_0];
	ld.param.u64 	%rd2, [_Z12vecAddKernelPfS_S_i_param_1];
	ld.param.u64 	%rd3, [_Z12vecAddKernelPfS_S_i_param_2];
	ld.param.u32 	%r2, [_Z12vecAddKernelPfS_S_i_param_3];

//vector_addition.cu:7   int i = threadIdx.x + blockDim.x * blockIdx.x;
	.loc	1 7 3
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r3;

//vector_addition.cu:8   if (i < n) {
	.loc	1 8 3
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;


//vector_addition.cu:7   int i = threadIdx.x + blockDim.x * blockIdx.x;
	.loc	1 7 3
	cvta.to.global.u64 	%rd4, %rd1;

//vector_addition.cu:9     C[i] = A[i] + B[i];
	.loc	1 9 5
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;

//vector_addition.cu:7   int i = threadIdx.x + blockDim.x * blockIdx.x;
	.loc	1 7 3
	cvta.to.global.u64 	%rd7, %rd2;

//vector_addition.cu:9     C[i] = A[i] + B[i];
	.loc	1 9 5
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;

//vector_addition.cu:7   int i = threadIdx.x + blockDim.x * blockIdx.x;
	.loc	1 7 3
	cvta.to.global.u64 	%rd9, %rd3;

//vector_addition.cu:9     C[i] = A[i] + B[i];
	.loc	1 9 5
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB0_2:

//vector_addition.cu:10   }
//vector_addition.cu:11 }
	.loc	1 11 1
	ret;

}

	.file	1 "/home/test001/proj/nao/repo/cuda-sample/gpu_mode/002/vector_addition/vector_addition.cu"
